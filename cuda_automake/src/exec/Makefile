# **********************************************************************************************
# ***                                     !!!WARNING!!!                                      ***
# *** WARNING: AUTO GENERATED FILE! DO NOT MODIFY BY HAND! YOUR CHANGES WILL BE OVERWRITTEN! ***
# ***                                     !!!WARNING!!!                                      ***
# ***                  Generated by Peano's Python API: www.peano-framework.org              ***
# **********************************************************************************************
.PHONY: all solver clean distclean maintainter-clean

CXX = nvc++

CXXFLAGS += -I/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/include
LIBS += -L../ -L/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/lib64 -lcuda_automake_example_release -lcudart_static

CXX_SOURCES=main.cpp 

CXX_OBJS=$(subst .cpp,.o,$(CXX_SOURCES))

all: solver

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.o: %.f90
	$(FC) $(FCFLAGS) -c -o $@ $<


#
# Linker arguments are read from left to right and objects are thrown away
# per step if they are not required anymore. That is: left libraries can
# depend objects right but not the other way round.
#
solver:  $(CXX_OBJS)
	$(CXX) $(CXX_OBJS) $(LDFLAGS) $(LIBS) -o cu_release
